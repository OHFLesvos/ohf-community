{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/node-snackbar/src/js/snackbar.js","webpack:///./resources/assets/js/imageupload.js","webpack:///./node_modules/cropperjs/dist/cropper.esm.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","Snackbar","current","$defaults","text","textColor","width","showAction","actionText","actionTextAria","actionTextColor","showSecondButton","secondButtonText","secondButtonAria","secondButtonTextColor","backgroundColor","pos","duration","customClass","onActionClick","element","style","opacity","onSecondButtonClick","onClose","show","$options","options","Extend","setTimeout","$parent","this","parentElement","removeChild","snackbar","document","createElement","className","$p","margin","padding","color","fontSize","fontWeight","lineHeight","innerHTML","appendChild","background","secondButton","setAttribute","addEventListener","actionButton","top","bottom","event","elapsed","propertyName","body","getComputedStyle","close","extended","deep","length","arguments","toString","merge","obj","prop","apply","Cropper","require","default","showAlert","message","constraints","video","min","height","window","cropper","upload","getElementById","remove","preview","image","input","$progress","$","$progressBar","$alert","$modal","cropButton","cropTitle","captureTitle","rotateRight","rotateLeft","startCaptureButton","captureButton","player","captureCanvas","click","hidden","src","navigator","mediaDevices","getUserMedia","then","stream","modal","srcObject","getVideoTracks","forEach","track","stop","videoHeight","videoWidth","getContext","drawImage","toDataURL","destroy","viewMode","e","reader","file","files","target","done","url","hide","URL","createObjectURL","FileReader","onload","result","readAsDataURL","on","autoCrop","rotate","initialPreviewURL","canvas","getCroppedCanvas","maxWidth","maxHeight","attr","removeClass","toBlob","blob","formData","FormData","append","csrfToken","ajax","imageUploadUrl","method","data","processData","contentType","xhr","XMLHttpRequest","onprogress","percent","percentage","lengthComputable","Math","round","loaded","total","success","error","complete","confirm","imageDeleteConfirmation","imageDeleteUrl","_token","_typeof","iterator","constructor","_defineProperties","props","descriptor","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_exports__","IN_BROWSER","WINDOW","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","dragMode","initialAspectRatio","NaN","aspectRatio","responsive","restore","checkCrossOrigin","checkOrientation","guides","center","highlight","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isUndefined","isObject","isPlainObject","_constructor","isFunction","callback","keys","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","REGEXP_SUFFIX","setStyle","styles","addClass","elem","classList","add","trim","indexOf","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","dataset","getAttribute","setData","REGEXP_SPACES","onceSupported","supported","once","listener","set","removeEventListener","removeListener","type","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","isFinite","getAdjustedSizes","_ref4","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","Infinity","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","deltaY","wheelDelta","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","croppable","AnotherCropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","ontimeout","onabort","onerror","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","userAgent","build","sizingImage","template","getElementsByClassName","unbuild"],"mappings":"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","file":"/js/imageupload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 243);\n","/*!\r\n * Snackbar v0.1.14\r\n * http://polonel.com/Snackbar\r\n *\r\n * Copyright 2018 Chris Brame and other contributors\r\n * Released under the MIT license\r\n * https://github.com/polonel/Snackbar/blob/master/LICENSE\r\n */\r\n\r\n(function(root, factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([], function() {\r\n            return (root.Snackbar = factory());\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        module.exports = root.Snackbar = factory();\r\n    } else {\r\n        root.Snackbar = factory();\r\n    }\r\n})(this, function() {\r\n    var Snackbar = {};\r\n\r\n    Snackbar.current = null;\r\n    var $defaults = {\r\n        text: 'Default Text',\r\n        textColor: '#FFFFFF',\r\n        width: 'auto',\r\n        showAction: true,\r\n        actionText: 'Dismiss',\r\n        actionTextAria: 'Dismiss, Description for Screen Readers',\r\n        actionTextColor: '#4CAF50',\r\n        showSecondButton: false,\r\n        secondButtonText: '',\r\n        secondButtonAria: 'Description for Screen Readers',\r\n        secondButtonTextColor: '#4CAF50',\r\n        backgroundColor: '#323232',\r\n        pos: 'bottom-left',\r\n        duration: 5000,\r\n        customClass: '',\r\n        onActionClick: function(element) {\r\n            element.style.opacity = 0;\r\n        },\r\n        onSecondButtonClick: function(element) {},\r\n        onClose: function(element) {}\r\n    };\r\n\r\n    Snackbar.show = function($options) {\r\n        var options = Extend(true, $defaults, $options);\r\n\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n            setTimeout(\r\n                function() {\r\n                    var $parent = this.parentElement;\r\n                    if ($parent)\r\n                    // possible null if too many/fast Snackbars\r\n                        $parent.removeChild(this);\r\n                }.bind(Snackbar.current),\r\n                500\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar = document.createElement('div');\r\n        Snackbar.snackbar.className = 'snackbar-container ' + options.customClass;\r\n        Snackbar.snackbar.style.width = options.width;\r\n        var $p = document.createElement('p');\r\n        $p.style.margin = 0;\r\n        $p.style.padding = 0;\r\n        $p.style.color = options.textColor;\r\n        $p.style.fontSize = '14px';\r\n        $p.style.fontWeight = 300;\r\n        $p.style.lineHeight = '1em';\r\n        $p.innerHTML = options.text;\r\n        Snackbar.snackbar.appendChild($p);\r\n        Snackbar.snackbar.style.background = options.backgroundColor;\r\n\r\n        if (options.showSecondButton) {\r\n            var secondButton = document.createElement('button');\r\n            secondButton.className = 'action';\r\n            secondButton.innerHTML = options.secondButtonText;\r\n            secondButton.setAttribute('aria-label', options.secondButtonAria);\r\n            secondButton.style.color = options.secondButtonTextColor;\r\n            secondButton.addEventListener('click', function() {\r\n                options.onSecondButtonClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(secondButton);\r\n        }\r\n\r\n        if (options.showAction) {\r\n            var actionButton = document.createElement('button');\r\n            actionButton.className = 'action';\r\n            actionButton.innerHTML = options.actionText;\r\n            actionButton.setAttribute('aria-label', options.actionTextAria);\r\n            actionButton.style.color = options.actionTextColor;\r\n            actionButton.addEventListener('click', function() {\r\n                options.onActionClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(actionButton);\r\n        }\r\n\r\n        if (options.duration) {\r\n            setTimeout(\r\n                function() {\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current.style.opacity = 0;\r\n                        // When natural remove event occurs let's move the snackbar to its origins\r\n                        Snackbar.current.style.top = '-100px';\r\n                        Snackbar.current.style.bottom = '-100px';\r\n                    }\r\n                }.bind(Snackbar.snackbar),\r\n                options.duration\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar.addEventListener(\r\n            'transitionend',\r\n            function(event, elapsed) {\r\n                if (event.propertyName === 'opacity' && this.style.opacity === '0') {\r\n                    if (typeof(options.onClose) === 'function')\r\n                        options.onClose(this);\r\n\r\n                    this.parentElement.removeChild(this);\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current = null;\r\n                    }\r\n                }\r\n            }.bind(Snackbar.snackbar)\r\n        );\r\n\r\n        Snackbar.current = Snackbar.snackbar;\r\n\r\n        document.body.appendChild(Snackbar.snackbar);\r\n        var $bottom = getComputedStyle(Snackbar.snackbar).bottom;\r\n        var $top = getComputedStyle(Snackbar.snackbar).top;\r\n        Snackbar.snackbar.style.opacity = 1;\r\n        Snackbar.snackbar.className =\r\n            'snackbar-container ' + options.customClass + ' snackbar-pos ' + options.pos;\r\n    };\r\n\r\n    Snackbar.close = function() {\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n        }\r\n    };\r\n\r\n    // Pure JS Extend\r\n    // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\r\n    var Extend = function() {\r\n        var extended = {};\r\n        var deep = false;\r\n        var i = 0;\r\n        var length = arguments.length;\r\n\r\n        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n\r\n        var merge = function(obj) {\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n                        extended[prop] = Extend(true, extended[prop], obj[prop]);\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        for (; i < length; i++) {\r\n            var obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n\r\n        return extended;\r\n    };\r\n\r\n    return Snackbar;\r\n});\r\n","var Cropper = require('cropperjs').default;\nvar Snackbar = require('node-snackbar');\n\nfunction showAlert(message) {\n    Snackbar.show({\n        text: message,\n        duration: 2500,\n        pos: 'bottom-center',\n        actionText: null,\n    });\n}\n\n// Video constraints\nconst constraints = {\n    video: {\n        width: {\n            min: 1280\n        },\n        height: {\n            min: 720\n        }\n    }\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    var upload = document.getElementById('upload');\n    var remove = document.getElementById('delete');\n    var preview = document.getElementById('preview');\n    var image = document.getElementById('image');\n    var input = document.getElementById('input');\n    var $progress = $('.progress');\n    var $progressBar = $('.progress-bar');\n    var $alert = $('.alert');\n    var $modal = $('#modal');\n    const cropButton = document.getElementById('crop');\n    const cropTitle = document.getElementById('cropTitle');\n    const captureTitle = document.getElementById('captureTitle');\n    \n    const rotateRight = document.getElementById('rotate-right');\n    const rotateLeft = document.getElementById('rotate-left');\n\n    const startCaptureButton = document.getElementById('startCapture');\n    const captureButton = document.getElementById('capture');\n    const player = document.getElementById('player');\n    const captureCanvas = document.getElementById('captureCanvas');\n\n    var cropper;\n\n    // Click on \"Upload\" button\n    upload.addEventListener('click', () => {\n        input.click();\n    });\n\n    // Click on \"Capture\" button\n    startCaptureButton.addEventListener('click', () => {\n        image.hidden = true;\n        player.hidden = false;\n        cropTitle.hidden = true;\n        captureTitle.hidden = false;\n        rotateRight.hidden = true;\n        rotateLeft.hidden = true;\n        image.src = null;\n\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then((stream) => {\n               \n                captureButton.hidden = false;\n                cropButton.hidden = true;\n\n                $modal.modal('show');\n                // Attach the video stream to the video element and autoplay.\n                player.srcObject = stream;\n            });\n        // TODO exception handling\n    });\n\n     // Capture recorded image\n    captureButton.addEventListener('click', () => {\n        player.srcObject.getVideoTracks().forEach(track => track.stop());\n  \n        captureCanvas.height = player.videoHeight;\n        captureCanvas.width = player.videoWidth;\n        var context = captureCanvas.getContext('2d');\n        context.drawImage(player, 0, 0, captureCanvas.width, captureCanvas.height);\n\n        image.src = captureCanvas.toDataURL(\"image/png\");\n\n        image.hidden = false;\n        player.hidden = true;\n        captureButton.hidden = true;\n        cropButton.hidden = false;\n        rotateRight.hidden = false;\n        rotateLeft.hidden = false;\n\n        cropTitle.hidden = false;\n        captureTitle.hidden = true;\n        \n        if (cropper) {\n            cropper.destroy();\n        }\n        cropper = new Cropper(image, {\n            viewMode: 3,\n        });\n    });\n\n    // Upload file\n    input.addEventListener('change', (e) => {\n        var files = e.target.files;\n        var done = function (url) {\n            input.value = '';\n            image.src = url;\n\n            image.hidden = false;\n            rotateRight.hidden = false;\n            rotateLeft.hidden = false;\n            player.hidden = true;\n            captureButton.hidden = true;\n            cropButton.hidden = false;\n            cropTitle.hidden = false;\n            captureTitle.hidden = true;  \n\n            $alert.hide();\n            $modal.modal('show');\n        };\n        var reader;\n        var file;\n\n        if (files && files.length > 0) {\n            file = files[0];\n            if (URL) {\n                done(URL.createObjectURL(file));\n            } else if (FileReader) {\n                reader = new FileReader();\n                reader.onload = function (e) {\n                    done(reader.result);\n                };\n                reader.readAsDataURL(file);\n            }\n        }\n    });\n\n    $modal.on('shown.bs.modal', () => {\n        cropper = new Cropper(image, {\n            viewMode: 1,\n            autoCrop: false,\n        });\n    }).on('hidden.bs.modal', () => {\n        cropper.destroy();\n        cropper = null;\n\n        // Stop all video streams.\n        if (player.srcObject != null) {\n            player.srcObject.getVideoTracks().forEach(track => track.stop());\n        }\n    });\n\n    rotateRight.addEventListener('click', () => {\n        if (cropper) {\n            cropper.rotate(90);\n        }\n    });\n    rotateLeft.addEventListener('click', () => {\n        if (cropper) {\n            cropper.rotate(-90);\n        }\n    });    \n\n    cropButton.addEventListener('click', () => {\n        var initialPreviewURL;\n        var canvas;\n\n        $modal.modal('hide');\n\n        if (cropper) {\n            canvas = cropper.getCroppedCanvas({\n                maxWidth: 800,\n                maxHeight: 800,\n             });\n            initialPreviewURL = preview.src;\n            preview.src = canvas.toDataURL();\n            preview.hidden = false;\n            $progressBar.width('0%').attr('aria-valuenow', 0).text('0%');\n            $progress.show();\n            $alert.removeClass('alert-success alert-warning');\n            canvas.toBlob(function (blob) {\n          \n                var formData = new FormData();\n                formData.append('img', blob);\n                formData.append(\"_token\", csrfToken);\n          \n                // AJAX request\n                $.ajax(imageUploadUrl, {\n                    method: 'POST',\n                    data: formData,\n                    processData: false,\n                    contentType: false,\n\n                    xhr: () => {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.upload.onprogress = function (e) {\n                            var percent = '0';\n                            var percentage = '0%';\n\n                            if (e.lengthComputable) {\n                            percent = Math.round((e.loaded / e.total) * 100);\n                            percentage = percent + '%';\n                            $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);\n                            }\n                        };\n\n                        return xhr;\n                    },\n\n                    // Success\n                    success: () => {\n                        showAlert('Upload success');\n                        remove.hidden = false;\n                    },\n\n                    // Error\n                    error: () => {\n                        preview.src = initialPreviewURL;\n                        showAlert('Upload error');\n                    },\n\n                    // Complete\n                    complete: () => {\n                        $progress.hide();\n                    },\n                });\n            });\n        }\n    });\n\n    // Remove image\n    if (remove) {\n        remove.addEventListener('click', () => {\n            if (confirm(imageDeleteConfirmation)) {\n                $.ajax(imageDeleteUrl, {\n                    method: 'DELETE',\n                    data: {\n                        _token: csrfToken\n                    },\n        \n                    // Success\n                    success: () => {\n                        showAlert('Delete success');\n                        remove.hidden = true;\n                        preview.hidden = true;\n                    },\n        \n                    // Error\n                    error: () => {\n                        showAlert('Delete error');\n                    },\n                });\n            }\n        });\n    }\n});\n","/*!\n * Cropper.js v1.4.3\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-24T13:07:15.032Z\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        var length = data.length;\n        var i;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(hyphenate(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(hyphenate(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n      ratios.push(ratio);\n    });\n  });\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n  return ratios[0];\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Check if the given value is a finite number.\n */\n\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    e.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr;\n      xhr.ontimeout = clone;\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n\n      xhr.onprogress = function () {\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('GET', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new Data URL with the orientation value set to 1\n        // as some iOS browsers will render image with its orientation\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin;\n      var crossOriginUrl;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Modern browsers (except Safari)\n\n\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n"],"sourceRoot":""}