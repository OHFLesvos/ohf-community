{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/node-snackbar/src/js/snackbar.js","webpack:///./resources/assets/js/imageupload.js","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","Snackbar","current","$defaults","text","textColor","width","showAction","actionText","actionTextAria","actionTextColor","showSecondButton","secondButtonText","secondButtonAria","secondButtonTextColor","backgroundColor","pos","duration","customClass","onActionClick","element","style","opacity","onSecondButtonClick","onClose","show","$options","options","Extend","setTimeout","$parent","this","parentElement","removeChild","snackbar","document","createElement","className","$p","margin","padding","color","fontSize","fontWeight","lineHeight","innerHTML","appendChild","background","secondButton","setAttribute","addEventListener","actionButton","top","bottom","event","elapsed","propertyName","body","getComputedStyle","close","extended","deep","length","arguments","toString","merge","obj","prop","apply","Cropper","require","default","showAlert","message","constraints","video","min","height","window","cropper","upload","getElementById","remove","preview","image","input","$progress","$","$progressBar","$alert","$modal","cropButton","cropTitle","captureTitle","rotateRight","rotateLeft","startCaptureButton","captureButton","player","captureCanvas","click","hidden","src","navigator","mediaDevices","getUserMedia","then","stream","modal","srcObject","getVideoTracks","forEach","track","stop","videoHeight","videoWidth","getContext","drawImage","toDataURL","destroy","viewMode","e","reader","file","files","target","done","url","hide","URL","createObjectURL","FileReader","onload","result","readAsDataURL","on","autoCrop","rotate","initialPreviewURL","canvas","getCroppedCanvas","maxWidth","maxHeight","attr","removeClass","toBlob","blob","formData","FormData","append","csrfToken","ajax","imageUploadUrl","method","data","processData","contentType","xhr","XMLHttpRequest","onprogress","percent","percentage","lengthComputable","Math","round","loaded","total","success","error","complete","confirm","imageDeleteConfirmation","imageDeleteUrl","_token","_typeof","iterator","constructor","_defineProperties","props","descriptor","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","TypeError","_nonIterableSpread","IS_BROWSER","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","dragMode","initialAspectRatio","NaN","aspectRatio","responsive","restore","checkCrossOrigin","checkOrientation","guides","center","highlight","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","isFunction","slice","toArray","callback","keys","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","REGEXP_SUFFIX","setStyle","styles","addClass","elem","classList","add","trim","indexOf","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","REGEXP_SPACES","onceSupported","supported","once","listener","set","removeEventListener","removeListener","type","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","exifIDCode","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","deltaY","wheelDelta","buttons","button","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","croppable","AnotherCropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","staticProps","protoProps","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","onabort","onerror","ontimeout","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","userAgent","build","sizingImage","template","getElementsByClassName","unbuild"],"mappings":"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","file":"/js/imageupload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 243);\n","/*!\r\n * Snackbar v0.1.14\r\n * http://polonel.com/Snackbar\r\n *\r\n * Copyright 2018 Chris Brame and other contributors\r\n * Released under the MIT license\r\n * https://github.com/polonel/Snackbar/blob/master/LICENSE\r\n */\r\n\r\n(function(root, factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([], function() {\r\n            return (root.Snackbar = factory());\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        module.exports = root.Snackbar = factory();\r\n    } else {\r\n        root.Snackbar = factory();\r\n    }\r\n})(this, function() {\r\n    var Snackbar = {};\r\n\r\n    Snackbar.current = null;\r\n    var $defaults = {\r\n        text: 'Default Text',\r\n        textColor: '#FFFFFF',\r\n        width: 'auto',\r\n        showAction: true,\r\n        actionText: 'Dismiss',\r\n        actionTextAria: 'Dismiss, Description for Screen Readers',\r\n        actionTextColor: '#4CAF50',\r\n        showSecondButton: false,\r\n        secondButtonText: '',\r\n        secondButtonAria: 'Description for Screen Readers',\r\n        secondButtonTextColor: '#4CAF50',\r\n        backgroundColor: '#323232',\r\n        pos: 'bottom-left',\r\n        duration: 5000,\r\n        customClass: '',\r\n        onActionClick: function(element) {\r\n            element.style.opacity = 0;\r\n        },\r\n        onSecondButtonClick: function(element) {},\r\n        onClose: function(element) {}\r\n    };\r\n\r\n    Snackbar.show = function($options) {\r\n        var options = Extend(true, $defaults, $options);\r\n\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n            setTimeout(\r\n                function() {\r\n                    var $parent = this.parentElement;\r\n                    if ($parent)\r\n                    // possible null if too many/fast Snackbars\r\n                        $parent.removeChild(this);\r\n                }.bind(Snackbar.current),\r\n                500\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar = document.createElement('div');\r\n        Snackbar.snackbar.className = 'snackbar-container ' + options.customClass;\r\n        Snackbar.snackbar.style.width = options.width;\r\n        var $p = document.createElement('p');\r\n        $p.style.margin = 0;\r\n        $p.style.padding = 0;\r\n        $p.style.color = options.textColor;\r\n        $p.style.fontSize = '14px';\r\n        $p.style.fontWeight = 300;\r\n        $p.style.lineHeight = '1em';\r\n        $p.innerHTML = options.text;\r\n        Snackbar.snackbar.appendChild($p);\r\n        Snackbar.snackbar.style.background = options.backgroundColor;\r\n\r\n        if (options.showSecondButton) {\r\n            var secondButton = document.createElement('button');\r\n            secondButton.className = 'action';\r\n            secondButton.innerHTML = options.secondButtonText;\r\n            secondButton.setAttribute('aria-label', options.secondButtonAria);\r\n            secondButton.style.color = options.secondButtonTextColor;\r\n            secondButton.addEventListener('click', function() {\r\n                options.onSecondButtonClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(secondButton);\r\n        }\r\n\r\n        if (options.showAction) {\r\n            var actionButton = document.createElement('button');\r\n            actionButton.className = 'action';\r\n            actionButton.innerHTML = options.actionText;\r\n            actionButton.setAttribute('aria-label', options.actionTextAria);\r\n            actionButton.style.color = options.actionTextColor;\r\n            actionButton.addEventListener('click', function() {\r\n                options.onActionClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(actionButton);\r\n        }\r\n\r\n        if (options.duration) {\r\n            setTimeout(\r\n                function() {\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current.style.opacity = 0;\r\n                        // When natural remove event occurs let's move the snackbar to its origins\r\n                        Snackbar.current.style.top = '-100px';\r\n                        Snackbar.current.style.bottom = '-100px';\r\n                    }\r\n                }.bind(Snackbar.snackbar),\r\n                options.duration\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar.addEventListener(\r\n            'transitionend',\r\n            function(event, elapsed) {\r\n                if (event.propertyName === 'opacity' && this.style.opacity === '0') {\r\n                    if (typeof(options.onClose) === 'function')\r\n                        options.onClose(this);\r\n\r\n                    this.parentElement.removeChild(this);\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current = null;\r\n                    }\r\n                }\r\n            }.bind(Snackbar.snackbar)\r\n        );\r\n\r\n        Snackbar.current = Snackbar.snackbar;\r\n\r\n        document.body.appendChild(Snackbar.snackbar);\r\n        var $bottom = getComputedStyle(Snackbar.snackbar).bottom;\r\n        var $top = getComputedStyle(Snackbar.snackbar).top;\r\n        Snackbar.snackbar.style.opacity = 1;\r\n        Snackbar.snackbar.className =\r\n            'snackbar-container ' + options.customClass + ' snackbar-pos ' + options.pos;\r\n    };\r\n\r\n    Snackbar.close = function() {\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n        }\r\n    };\r\n\r\n    // Pure JS Extend\r\n    // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\r\n    var Extend = function() {\r\n        var extended = {};\r\n        var deep = false;\r\n        var i = 0;\r\n        var length = arguments.length;\r\n\r\n        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n\r\n        var merge = function(obj) {\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n                        extended[prop] = Extend(true, extended[prop], obj[prop]);\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        for (; i < length; i++) {\r\n            var obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n\r\n        return extended;\r\n    };\r\n\r\n    return Snackbar;\r\n});\r\n","var Cropper = require('cropperjs').default;\r\nvar Snackbar = require('node-snackbar');\r\n\r\nfunction showAlert(message) {\r\n    Snackbar.show({\r\n        text: message,\r\n        duration: 2500,\r\n        pos: 'bottom-center',\r\n        actionText: null,\r\n    });\r\n}\r\n\r\n// Video constraints\r\nconst constraints = {\r\n    video: {\r\n        width: {\r\n            min: 1280\r\n        },\r\n        height: {\r\n            min: 720\r\n        }\r\n    }\r\n};\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    var upload = document.getElementById('upload');\r\n    var remove = document.getElementById('delete');\r\n    var preview = document.getElementById('preview');\r\n    var image = document.getElementById('image');\r\n    var input = document.getElementById('input');\r\n    var $progress = $('.progress');\r\n    var $progressBar = $('.progress-bar');\r\n    var $alert = $('.alert');\r\n    var $modal = $('#modal');\r\n    const cropButton = document.getElementById('crop');\r\n    const cropTitle = document.getElementById('cropTitle');\r\n    const captureTitle = document.getElementById('captureTitle');\r\n    \r\n    const rotateRight = document.getElementById('rotate-right');\r\n    const rotateLeft = document.getElementById('rotate-left');\r\n\r\n    const startCaptureButton = document.getElementById('startCapture');\r\n    const captureButton = document.getElementById('capture');\r\n    const player = document.getElementById('player');\r\n    const captureCanvas = document.getElementById('captureCanvas');\r\n\r\n    var cropper;\r\n\r\n    // Click on \"Upload\" button\r\n    upload.addEventListener('click', () => {\r\n        input.click();\r\n    });\r\n\r\n    // Click on \"Capture\" button\r\n    startCaptureButton.addEventListener('click', () => {\r\n        image.hidden = true;\r\n        player.hidden = false;\r\n        cropTitle.hidden = true;\r\n        captureTitle.hidden = false;\r\n        rotateRight.hidden = true;\r\n        rotateLeft.hidden = true;\r\n        image.src = null;\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints)\r\n            .then((stream) => {\r\n               \r\n                captureButton.hidden = false;\r\n                cropButton.hidden = true;\r\n\r\n                $modal.modal('show');\r\n                // Attach the video stream to the video element and autoplay.\r\n                player.srcObject = stream;\r\n            });\r\n        // TODO exception handling\r\n    });\r\n\r\n     // Capture recorded image\r\n    captureButton.addEventListener('click', () => {\r\n        player.srcObject.getVideoTracks().forEach(track => track.stop());\r\n  \r\n        captureCanvas.height = player.videoHeight;\r\n        captureCanvas.width = player.videoWidth;\r\n        var context = captureCanvas.getContext('2d');\r\n        context.drawImage(player, 0, 0, captureCanvas.width, captureCanvas.height);\r\n\r\n        image.src = captureCanvas.toDataURL(\"image/png\");\r\n\r\n        image.hidden = false;\r\n        player.hidden = true;\r\n        captureButton.hidden = true;\r\n        cropButton.hidden = false;\r\n        rotateRight.hidden = false;\r\n        rotateLeft.hidden = false;\r\n\r\n        cropTitle.hidden = false;\r\n        captureTitle.hidden = true;\r\n        \r\n        if (cropper) {\r\n            cropper.destroy();\r\n        }\r\n        cropper = new Cropper(image, {\r\n            viewMode: 3,\r\n        });\r\n    });\r\n\r\n    // Upload file\r\n    input.addEventListener('change', (e) => {\r\n        var files = e.target.files;\r\n        var done = function (url) {\r\n            input.value = '';\r\n            image.src = url;\r\n\r\n            image.hidden = false;\r\n            rotateRight.hidden = false;\r\n            rotateLeft.hidden = false;\r\n            player.hidden = true;\r\n            captureButton.hidden = true;\r\n            cropButton.hidden = false;\r\n            cropTitle.hidden = false;\r\n            captureTitle.hidden = true;  \r\n\r\n            $alert.hide();\r\n            $modal.modal('show');\r\n        };\r\n        var reader;\r\n        var file;\r\n\r\n        if (files && files.length > 0) {\r\n            file = files[0];\r\n            if (URL) {\r\n                done(URL.createObjectURL(file));\r\n            } else if (FileReader) {\r\n                reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    done(reader.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            }\r\n        }\r\n    });\r\n\r\n    $modal.on('shown.bs.modal', () => {\r\n        cropper = new Cropper(image, {\r\n            viewMode: 1,\r\n            autoCrop: false,\r\n        });\r\n    }).on('hidden.bs.modal', () => {\r\n        cropper.destroy();\r\n        cropper = null;\r\n\r\n        // Stop all video streams.\r\n        if (player.srcObject != null) {\r\n            player.srcObject.getVideoTracks().forEach(track => track.stop());\r\n        }\r\n    });\r\n\r\n    rotateRight.addEventListener('click', () => {\r\n        if (cropper) {\r\n            cropper.rotate(90);\r\n        }\r\n    });\r\n    rotateLeft.addEventListener('click', () => {\r\n        if (cropper) {\r\n            cropper.rotate(-90);\r\n        }\r\n    });    \r\n\r\n    cropButton.addEventListener('click', () => {\r\n        var initialPreviewURL;\r\n        var canvas;\r\n\r\n        $modal.modal('hide');\r\n\r\n        if (cropper) {\r\n            canvas = cropper.getCroppedCanvas({\r\n                maxWidth: 800,\r\n                maxHeight: 800,\r\n             });\r\n            initialPreviewURL = preview.src;\r\n            preview.src = canvas.toDataURL();\r\n            preview.hidden = false;\r\n            $progressBar.width('0%').attr('aria-valuenow', 0).text('0%');\r\n            $progress.show();\r\n            $alert.removeClass('alert-success alert-warning');\r\n            canvas.toBlob(function (blob) {\r\n          \r\n                var formData = new FormData();\r\n                formData.append('img', blob);\r\n                formData.append(\"_token\", csrfToken);\r\n          \r\n                // AJAX request\r\n                $.ajax(imageUploadUrl, {\r\n                    method: 'POST',\r\n                    data: formData,\r\n                    processData: false,\r\n                    contentType: false,\r\n\r\n                    xhr: () => {\r\n                        var xhr = new XMLHttpRequest();\r\n\r\n                        xhr.upload.onprogress = function (e) {\r\n                            var percent = '0';\r\n                            var percentage = '0%';\r\n\r\n                            if (e.lengthComputable) {\r\n                            percent = Math.round((e.loaded / e.total) * 100);\r\n                            percentage = percent + '%';\r\n                            $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);\r\n                            }\r\n                        };\r\n\r\n                        return xhr;\r\n                    },\r\n\r\n                    // Success\r\n                    success: () => {\r\n                        showAlert('Upload success');\r\n                        remove.hidden = false;\r\n                    },\r\n\r\n                    // Error\r\n                    error: () => {\r\n                        preview.src = initialPreviewURL;\r\n                        showAlert('Upload error');\r\n                    },\r\n\r\n                    // Complete\r\n                    complete: () => {\r\n                        $progress.hide();\r\n                    },\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    // Remove image\r\n    if (remove) {\r\n        remove.addEventListener('click', () => {\r\n            if (confirm(imageDeleteConfirmation)) {\r\n                $.ajax(imageDeleteUrl, {\r\n                    method: 'DELETE',\r\n                    data: {\r\n                        _token: csrfToken\r\n                    },\r\n        \r\n                    // Success\r\n                    success: () => {\r\n                        showAlert('Delete success');\r\n                        remove.hidden = true;\r\n                        preview.hidden = true;\r\n                    },\r\n        \r\n                    // Error\r\n                    error: () => {\r\n                        showAlert('Delete error');\r\n                    },\r\n                });\r\n            }\r\n        });\r\n    }\r\n});\r\n","/*!\n * Cropper.js v1.5.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-03-10T09:55:53.729Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"sourceRoot":""}