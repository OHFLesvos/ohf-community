{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/imageupload.js","webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///./node_modules/node-snackbar/src/js/snackbar.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Cropper","require","Snackbar","showAlert","message","show","text","duration","pos","actionText","constraints","video","width","min","height","window","addEventListener","cropper","upload","document","getElementById","remove","preview","image","input","$progress","$","$progressBar","$alert","$modal","cropButton","cropTitle","captureTitle","rotateRight","rotateLeft","startCaptureButton","captureButton","player","captureCanvas","click","hidden","src","navigator","mediaDevices","getUserMedia","then","stream","modal","srcObject","getVideoTracks","forEach","track","stop","videoHeight","videoWidth","getContext","drawImage","toDataURL","destroy","viewMode","e","reader","file","files","target","done","url","hide","length","URL","createObjectURL","FileReader","onload","result","readAsDataURL","on","autoCrop","rotate","initialPreviewURL","canvas","getCroppedCanvas","maxWidth","maxHeight","attr","removeClass","toBlob","blob","formData","FormData","append","csrfToken","ajax","imageUploadUrl","method","data","processData","contentType","xhr","XMLHttpRequest","onprogress","percent","percentage","lengthComputable","Math","round","loaded","total","success","error","complete","confirm","imageDeleteConfirmation","imageDeleteUrl","_token","_typeof","obj","iterator","constructor","_defineProperties","props","descriptor","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","TypeError","_nonIterableSpread","IS_BROWSER","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","dragMode","initialAspectRatio","NaN","aspectRatio","responsive","restore","checkCrossOrigin","checkOrientation","guides","center","highlight","background","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","isFunction","slice","toArray","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","REGEXP_SUFFIX","setStyle","element","styles","style","addClass","elem","classList","add","className","trim","indexOf","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","set","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","isValidWidth","isValidHeight","adjustedWidth","getSourceCanvas","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","createElement","context","maxSizes","minSizes","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","PI","scale","map","param","floor","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","exifIDCode","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","croppable","AnotherCropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","staticProps","protoProps","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","onabort","onerror","ontimeout","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","factory","__WEBPACK_AMD_DEFINE_RESULT__","root","current","$defaults","textColor","showAction","actionTextAria","actionTextColor","showSecondButton","secondButtonText","secondButtonAria","secondButtonTextColor","backgroundColor","customClass","onActionClick","opacity","onSecondButtonClick","onClose","$options","Extend","$parent","parentElement","snackbar","$p","margin","padding","color","fontSize","fontWeight","lineHeight","secondButton","actionButton","elapsed","propertyName","getComputedStyle","close","extended","deep","merge","prop"],"mappings":"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","file":"/js/imageupload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 184);\n","var Cropper = require('cropperjs').default;\nvar Snackbar = require('node-snackbar');\n\nfunction showAlert(message) {\n    Snackbar.show({\n        text: message,\n        duration: 2500,\n        pos: 'bottom-center',\n        actionText: null,\n    });\n}\n\n// Video constraints\nconst constraints = {\n    video: {\n        width: {\n            min: 1280\n        },\n        height: {\n            min: 720\n        }\n    }\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    var upload = document.getElementById('upload');\n    var remove = document.getElementById('delete');\n    var preview = document.getElementById('preview');\n    var image = document.getElementById('image');\n    var input = document.getElementById('input');\n    var $progress = $('.progress');\n    var $progressBar = $('.progress-bar');\n    var $alert = $('.alert');\n    var $modal = $('#modal');\n    const cropButton = document.getElementById('crop');\n    const cropTitle = document.getElementById('cropTitle');\n    const captureTitle = document.getElementById('captureTitle');\n    \n    const rotateRight = document.getElementById('rotate-right');\n    const rotateLeft = document.getElementById('rotate-left');\n\n    const startCaptureButton = document.getElementById('startCapture');\n    const captureButton = document.getElementById('capture');\n    const player = document.getElementById('player');\n    const captureCanvas = document.getElementById('captureCanvas');\n\n    var cropper;\n\n    // Click on \"Upload\" button\n    upload.addEventListener('click', () => {\n        input.click();\n    });\n\n    // Click on \"Capture\" button\n    startCaptureButton.addEventListener('click', () => {\n        image.hidden = true;\n        player.hidden = false;\n        cropTitle.hidden = true;\n        captureTitle.hidden = false;\n        rotateRight.hidden = true;\n        rotateLeft.hidden = true;\n        image.src = null;\n\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then((stream) => {\n               \n                captureButton.hidden = false;\n                cropButton.hidden = true;\n\n                $modal.modal('show');\n                // Attach the video stream to the video element and autoplay.\n                player.srcObject = stream;\n            });\n        // TODO exception handling\n    });\n\n     // Capture recorded image\n    captureButton.addEventListener('click', () => {\n        player.srcObject.getVideoTracks().forEach(track => track.stop());\n  \n        captureCanvas.height = player.videoHeight;\n        captureCanvas.width = player.videoWidth;\n        var context = captureCanvas.getContext('2d');\n        context.drawImage(player, 0, 0, captureCanvas.width, captureCanvas.height);\n\n        image.src = captureCanvas.toDataURL(\"image/png\");\n\n        image.hidden = false;\n        player.hidden = true;\n        captureButton.hidden = true;\n        cropButton.hidden = false;\n        rotateRight.hidden = false;\n        rotateLeft.hidden = false;\n\n        cropTitle.hidden = false;\n        captureTitle.hidden = true;\n        \n        if (cropper) {\n            cropper.destroy();\n        }\n        cropper = new Cropper(image, {\n            viewMode: 3,\n        });\n    });\n\n    // Upload file\n    input.addEventListener('change', (e) => {\n        var files = e.target.files;\n        var done = function (url) {\n            input.value = '';\n            image.src = url;\n\n            image.hidden = false;\n            rotateRight.hidden = false;\n            rotateLeft.hidden = false;\n            player.hidden = true;\n            captureButton.hidden = true;\n            cropButton.hidden = false;\n            cropTitle.hidden = false;\n            captureTitle.hidden = true;  \n\n            $alert.hide();\n            $modal.modal('show');\n        };\n        var reader;\n        var file;\n\n        if (files && files.length > 0) {\n            file = files[0];\n            if (URL) {\n                done(URL.createObjectURL(file));\n            } else if (FileReader) {\n                reader = new FileReader();\n                reader.onload = function (e) {\n                    done(reader.result);\n                };\n                reader.readAsDataURL(file);\n            }\n        }\n    });\n\n    $modal.on('shown.bs.modal', () => {\n        cropper = new Cropper(image, {\n            viewMode: 1,\n            autoCrop: false,\n        });\n    }).on('hidden.bs.modal', () => {\n        cropper.destroy();\n        cropper = null;\n\n        // Stop all video streams.\n        if (player.srcObject != null) {\n            player.srcObject.getVideoTracks().forEach(track => track.stop());\n        }\n    });\n\n    rotateRight.addEventListener('click', () => {\n        if (cropper) {\n            cropper.rotate(90);\n        }\n    });\n    rotateLeft.addEventListener('click', () => {\n        if (cropper) {\n            cropper.rotate(-90);\n        }\n    });    \n\n    cropButton.addEventListener('click', () => {\n        var initialPreviewURL;\n        var canvas;\n\n        $modal.modal('hide');\n\n        if (cropper) {\n            canvas = cropper.getCroppedCanvas({\n                maxWidth: 800,\n                maxHeight: 800,\n             });\n            initialPreviewURL = preview.src;\n            preview.src = canvas.toDataURL();\n            preview.hidden = false;\n            $progressBar.width('0%').attr('aria-valuenow', 0).text('0%');\n            $progress.show();\n            $alert.removeClass('alert-success alert-warning');\n            canvas.toBlob(function (blob) {\n          \n                var formData = new FormData();\n                formData.append('img', blob);\n                formData.append(\"_token\", csrfToken);\n          \n                // AJAX request\n                $.ajax(imageUploadUrl, {\n                    method: 'POST',\n                    data: formData,\n                    processData: false,\n                    contentType: false,\n\n                    xhr: () => {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.upload.onprogress = function (e) {\n                            var percent = '0';\n                            var percentage = '0%';\n\n                            if (e.lengthComputable) {\n                            percent = Math.round((e.loaded / e.total) * 100);\n                            percentage = percent + '%';\n                            $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);\n                            }\n                        };\n\n                        return xhr;\n                    },\n\n                    // Success\n                    success: () => {\n                        showAlert('Upload success');\n                        remove.hidden = false;\n                    },\n\n                    // Error\n                    error: () => {\n                        preview.src = initialPreviewURL;\n                        showAlert('Upload error');\n                    },\n\n                    // Complete\n                    complete: () => {\n                        $progress.hide();\n                    },\n                });\n            });\n        }\n    });\n\n    // Remove image\n    if (remove) {\n        remove.addEventListener('click', () => {\n            if (confirm(imageDeleteConfirmation)) {\n                $.ajax(imageDeleteUrl, {\n                    method: 'DELETE',\n                    data: {\n                        _token: csrfToken\n                    },\n        \n                    // Success\n                    success: () => {\n                        showAlert('Delete success');\n                        remove.hidden = true;\n                        preview.hidden = true;\n                    },\n        \n                    // Error\n                    error: () => {\n                        showAlert('Delete error');\n                    },\n                });\n            }\n        });\n    }\n});\n","/*!\n * Cropper.js v1.5.4\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-07-20T02:37:47.411Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","/*!\r\n * Snackbar v0.1.14\r\n * http://polonel.com/Snackbar\r\n *\r\n * Copyright 2018 Chris Brame and other contributors\r\n * Released under the MIT license\r\n * https://github.com/polonel/Snackbar/blob/master/LICENSE\r\n */\r\n\r\n(function(root, factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([], function() {\r\n            return (root.Snackbar = factory());\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        module.exports = root.Snackbar = factory();\r\n    } else {\r\n        root.Snackbar = factory();\r\n    }\r\n})(this, function() {\r\n    var Snackbar = {};\r\n\r\n    Snackbar.current = null;\r\n    var $defaults = {\r\n        text: 'Default Text',\r\n        textColor: '#FFFFFF',\r\n        width: 'auto',\r\n        showAction: true,\r\n        actionText: 'Dismiss',\r\n        actionTextAria: 'Dismiss, Description for Screen Readers',\r\n        actionTextColor: '#4CAF50',\r\n        showSecondButton: false,\r\n        secondButtonText: '',\r\n        secondButtonAria: 'Description for Screen Readers',\r\n        secondButtonTextColor: '#4CAF50',\r\n        backgroundColor: '#323232',\r\n        pos: 'bottom-left',\r\n        duration: 5000,\r\n        customClass: '',\r\n        onActionClick: function(element) {\r\n            element.style.opacity = 0;\r\n        },\r\n        onSecondButtonClick: function(element) {},\r\n        onClose: function(element) {}\r\n    };\r\n\r\n    Snackbar.show = function($options) {\r\n        var options = Extend(true, $defaults, $options);\r\n\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n            setTimeout(\r\n                function() {\r\n                    var $parent = this.parentElement;\r\n                    if ($parent)\r\n                    // possible null if too many/fast Snackbars\r\n                        $parent.removeChild(this);\r\n                }.bind(Snackbar.current),\r\n                500\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar = document.createElement('div');\r\n        Snackbar.snackbar.className = 'snackbar-container ' + options.customClass;\r\n        Snackbar.snackbar.style.width = options.width;\r\n        var $p = document.createElement('p');\r\n        $p.style.margin = 0;\r\n        $p.style.padding = 0;\r\n        $p.style.color = options.textColor;\r\n        $p.style.fontSize = '14px';\r\n        $p.style.fontWeight = 300;\r\n        $p.style.lineHeight = '1em';\r\n        $p.innerHTML = options.text;\r\n        Snackbar.snackbar.appendChild($p);\r\n        Snackbar.snackbar.style.background = options.backgroundColor;\r\n\r\n        if (options.showSecondButton) {\r\n            var secondButton = document.createElement('button');\r\n            secondButton.className = 'action';\r\n            secondButton.innerHTML = options.secondButtonText;\r\n            secondButton.setAttribute('aria-label', options.secondButtonAria);\r\n            secondButton.style.color = options.secondButtonTextColor;\r\n            secondButton.addEventListener('click', function() {\r\n                options.onSecondButtonClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(secondButton);\r\n        }\r\n\r\n        if (options.showAction) {\r\n            var actionButton = document.createElement('button');\r\n            actionButton.className = 'action';\r\n            actionButton.innerHTML = options.actionText;\r\n            actionButton.setAttribute('aria-label', options.actionTextAria);\r\n            actionButton.style.color = options.actionTextColor;\r\n            actionButton.addEventListener('click', function() {\r\n                options.onActionClick(Snackbar.snackbar);\r\n            });\r\n            Snackbar.snackbar.appendChild(actionButton);\r\n        }\r\n\r\n        if (options.duration) {\r\n            setTimeout(\r\n                function() {\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current.style.opacity = 0;\r\n                        // When natural remove event occurs let's move the snackbar to its origins\r\n                        Snackbar.current.style.top = '-100px';\r\n                        Snackbar.current.style.bottom = '-100px';\r\n                    }\r\n                }.bind(Snackbar.snackbar),\r\n                options.duration\r\n            );\r\n        }\r\n\r\n        Snackbar.snackbar.addEventListener(\r\n            'transitionend',\r\n            function(event, elapsed) {\r\n                if (event.propertyName === 'opacity' && this.style.opacity === '0') {\r\n                    if (typeof(options.onClose) === 'function')\r\n                        options.onClose(this);\r\n\r\n                    this.parentElement.removeChild(this);\r\n                    if (Snackbar.current === this) {\r\n                        Snackbar.current = null;\r\n                    }\r\n                }\r\n            }.bind(Snackbar.snackbar)\r\n        );\r\n\r\n        Snackbar.current = Snackbar.snackbar;\r\n\r\n        document.body.appendChild(Snackbar.snackbar);\r\n        var $bottom = getComputedStyle(Snackbar.snackbar).bottom;\r\n        var $top = getComputedStyle(Snackbar.snackbar).top;\r\n        Snackbar.snackbar.style.opacity = 1;\r\n        Snackbar.snackbar.className =\r\n            'snackbar-container ' + options.customClass + ' snackbar-pos ' + options.pos;\r\n    };\r\n\r\n    Snackbar.close = function() {\r\n        if (Snackbar.current) {\r\n            Snackbar.current.style.opacity = 0;\r\n        }\r\n    };\r\n\r\n    // Pure JS Extend\r\n    // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\r\n    var Extend = function() {\r\n        var extended = {};\r\n        var deep = false;\r\n        var i = 0;\r\n        var length = arguments.length;\r\n\r\n        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n\r\n        var merge = function(obj) {\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n                        extended[prop] = Extend(true, extended[prop], obj[prop]);\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        for (; i < length; i++) {\r\n            var obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n\r\n        return extended;\r\n    };\r\n\r\n    return Snackbar;\r\n});\r\n"],"sourceRoot":""}